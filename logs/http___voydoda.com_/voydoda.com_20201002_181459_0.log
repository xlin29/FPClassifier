~0x22a9cfd91000
@?
!?
c-1:%Save:{Window}:"Object":%safe
!?
c-1:%Save:{Window}:"Function":%safe
!?
c-1:%Save:{Window}:"Array":%safe
!?
c-1:%Save:{Window}:"String":%safe
!?
c-1:%Save:{Window}:"RegExp":%safe
!?
c-1:%Save:{Window}:"Error":%safe
!?
c-1:%Save:{Window}:"JSON":{Object}
@"chrome-extension\://aapnijgdinlhnhlmodcfapnahmbfebeb"
$13:"extensions\:\:guestViewDeny":(function(require, requireNative, loadScript, exports, console, privates, apiBridge, bindingUtil, getInternalApi, $Array, $Function, $JSON, $Object, $RegExp, $String, $Error) {'use strict';// Copyright 2015 The Chromium Authors. All rights reserved.\x0a// Use of this source code is governed by a BSD-style license that can be\x0a// found in the LICENSE file.\x0a\x0a// This module implements the registration of guestview elements when\x0a// permissions are not available. These elements exist only to provide a useful\x0a// error message when developers attempt to use them.\x0a\x0avar $CustomElementRegistry =\x0a    require('safeMethods').SafeMethods.$CustomElementRegistry;\x0avar $EventTarget = require('safeMethods').SafeMethods.$EventTarget;\x0avar GuestViewInternalNatives = requireNative('guest_view_internal');\x0a\x0avar ERROR_MESSAGE = 'You do not have permission to use the %1 element.' +\x0a    ' Be sure to declare the "%1" permission in your manifest file.';\x0a\x0a// A list of view types that will have custom elements registered if they are\x0a// not already registered by the time this module is loaded.\x0avar VIEW_TYPES = [\x0a  'AppView',\x0a  'ExtensionOptions',\x0a  'ExtensionView',\x0a  'WebView'\x0a];\x0a\x0a// Registers a GuestView custom element.\x0afunction registerGuestViewElement(viewType) {\x0a  GuestViewInternalNatives.AllowGuestViewElementDefinition(() => {\x0a    var DeniedElement = class extends HTMLElement {\x0a      constructor() {\x0a        super();\x0a        window.console.error($String.replace(\x0a            ERROR_MESSAGE, /%1/g, $String.toLowerCase(viewType)));\x0a      }\x0a    }\x0a    $CustomElementRegistry.define(\x0a        window.customElements, $String.toLowerCase(viewType), DeniedElement);\x0a    $Object.defineProperty(window, viewType, {\x0a      value\: DeniedElement,\x0a    });\x0a  });\x0a}\x0a\x0avar useCapture = true;\x0awindow.addEventListener('readystatechange', function listener(event) {\x0a  if (document.readyState == 'loading')\x0a    return;\x0a\x0a  for (var viewType of VIEW_TYPES) {\x0a    // Register the error-providing custom element only for those view types\x0a    // that have not already been registered. Since this module is always loaded\x0a    // last, all the view types that are available (i.e. have the proper\x0a    // permissions) will have already been registered on |window|.\x0a    if (!$Object.hasOwnProperty(window, viewType))\x0a      registerGuestViewElement(viewType);\x0a  }\x0a\x0a  $EventTarget.removeEventListener(window, event.type, listener, useCapture);\x0a}, useCapture);\x0a\x0a})
!13
c593:%require:{Window}:"safeMethods"
$14:"extensions\:\:safeMethods":(function(require, requireNative, loadScript, exports, console, privates, apiBridge, bindingUtil, getInternalApi, $Array, $Function, $JSON, $Object, $RegExp, $String, $Error) {'use strict';// Copyright (c) 2018 The Chromium Authors. All rights reserved.\x0a// Use of this source code is governed by a BSD-style license that can be\x0a// found in the LICENSE file.\x0a\x0a// This module keeps references to original methods before user code is able\x0a// to overwrite them. We assume that this module is executed before any user\x0a// code. The idea is similar to the extension system's SafeBuiltins, and since\x0a// it's similar, we also use a $ prefix as a naming convention.\x0a// For example,\x0a// myElement.setAttribute(name, value);\x0a// becomes\x0a// $Element.setAttribute(myElement, name, value);\x0a// We also provide access to getters and setters\:\x0a// myNode.parentNode;\x0a// becomes\x0a// $Node.parentNode.get(myNode);\x0a\x0afunction makeCallable(prototypeMethod) {\x0a  return (thisArg, ...args) => {\x0a    return $Function.apply(prototypeMethod, thisArg, args);\x0a  };\x0a}\x0a\x0afunction saveMethods(original, safe, methods) {\x0a  for (var method of methods) {\x0a    safe[method] = makeCallable(original.prototype[method]);\x0a  }\x0a}\x0a\x0afunction saveAccessors(original, safe, properties) {\x0a  for (var property of properties) {\x0a    var desc = $Object.getOwnPropertyDescriptor(original.prototype, property);\x0a\x0a    safe[property] = {\x0a      get\: desc.get && makeCallable(desc.get),\x0a      set\: desc.set && makeCallable(desc.set),\x0a    };\x0a  }\x0a}\x0a\x0avar SafeMethods = {\x0a  $CustomElementRegistry\: {},\x0a  $Document\: {},\x0a  $Element\: {},\x0a  $EventTarget\: {},\x0a  $HTMLElement\: {},\x0a  $HTMLIFrameElement\: {},\x0a  $MutationObserver\: MutationObserver,\x0a  $Node\: {},\x0a  $getComputedStyle\: window.getComputedStyle,\x0a  $parseInt\: window.parseInt,\x0a};\x0a\x0asaveMethods(CustomElementRegistry, SafeMethods.$CustomElementRegistry, [\x0a  'define',\x0a]);\x0a\x0asaveMethods(Document, SafeMethods.$Document, [\x0a  'createElement',\x0a  'webkitCancelFullScreen',\x0a]);\x0a\x0asaveMethods(Element, SafeMethods.$Element, [\x0a  'attachShadow',\x0a  'getAttribute',\x0a  'getBoundingClientRect',\x0a  'hasAttribute',\x0a  'removeAttribute',\x0a  'setAttribute',\x0a  'webkitRequestFullScreen',\x0a]);\x0a\x0asaveMethods(EventTarget, SafeMethods.$EventTarget, [\x0a  'addEventListener',\x0a  'dispatchEvent',\x0a  'removeEventListener',\x0a]);\x0a\x0asaveMethods(HTMLElement, SafeMethods.$HTMLElement, [\x0a  'focus',\x0a]);\x0a\x0asaveAccessors(HTMLElement, SafeMethods.$HTMLElement, [\x0a  'style',\x0a  'innerText',\x0a]);\x0a\x0asaveAccessors(HTMLIFrameElement, SafeMethods.$HTMLIFrameElement, [\x0a  'contentWindow',\x0a]);\x0a\x0asaveMethods(MutationObserver, SafeMethods.$MutationObserver, [\x0a  'observe',\x0a  'takeRecords',\x0a]);\x0a\x0asaveMethods(Node, SafeMethods.$Node, [\x0a  'appendChild',\x0a  'replaceChild',\x0a]);\x0a\x0asaveAccessors(Node, SafeMethods.$Node, [\x0a  'parentNode',\x0a]);\x0a\x0aexports.$set('SafeMethods', SafeMethods);\x0a\x0a})
!14
g1710:{Window}:"getComputedStyle"
g1748:{Window}:"parseInt"
g1162:{Document}:"createElement"
g1162:{Document}:"webkitCancelFullScreen"
g1162:{Element}:"attachShadow"
g1162:{Element}:"getAttribute"
g1162:{Element}:"getBoundingClientRect"
g1162:{Element}:"hasAttribute"
g1162:{Element}:"removeAttribute"
g1162:{Element}:"setAttribute"
g1162:{Element}:"webkitRequestFullScreen"
g1162:{HTMLElement}:"focus"
c1293:%Apply:{Window}:%getOwnPropertyDescriptor:%Object:{Arguments}:0:2
c1293:%Apply:{Window}:%getOwnPropertyDescriptor:%Object:{Arguments}:0:2
c1293:%Apply:{Window}:%getOwnPropertyDescriptor:%Object:{Arguments}:0:2
g1162:{Node}:"appendChild"
g1162:{Node}:"replaceChild"
c1293:%Apply:{Window}:%getOwnPropertyDescriptor:%Object:{Arguments}:0:2
c2767:%<anonymous>:{Object}:"SafeMethods":{Object}
!13
c671:%require:{Window}:"safeMethods"
c751:%requireNative:{Window}:"guest_view_internal"
g1770:{Window}:"addEventListener"
c1770:%addEventListener:{Window}:"readystatechange":listener:#T
!?
n-1:%CustomWrappableAdapter
!?
n-1:%Event
!13
g1849:{HTMLDocument}:"readyState"
c1849:?:{HTMLDocument}
c2239:%Apply:{Window}:%hasOwnProperty:{Window}:{Arguments}:1:2
c1277:%AllowGuestViewElementDefinition:{Object}:<anonymous>
g1585:{Window}:"customElements"
c1585:?:{Window}
n1585:%CustomElementRegistry
c1609:%Apply:{Window}:%toLowerCase:"AppView":{Arguments}:1:1
!14
c985:%Apply:{Window}:%apply:%define:{Arguments}:1:3
c985:%define:{CustomElementRegistry}:"appview":DeniedElement
!13
c1660:%Apply:{Window}:%defineProperty:%Object:{Arguments}:0:3
c2239:%Apply:{Window}:%hasOwnProperty:{Window}:{Arguments}:1:2
c1277:%AllowGuestViewElementDefinition:{Object}:<anonymous>
g1585:{Window}:"customElements"
c1585:?:{Window}
c1609:%Apply:{Window}:%toLowerCase:"ExtensionOptions":{Arguments}:1:1
!14
c985:%Apply:{Window}:%apply:%define:{Arguments}:1:3
c985:%define:{CustomElementRegistry}:"extensionoptions":DeniedElement
!13
c1660:%Apply:{Window}:%defineProperty:%Object:{Arguments}:0:3
c2239:%Apply:{Window}:%hasOwnProperty:{Window}:{Arguments}:1:2
c1277:%AllowGuestViewElementDefinition:{Object}:<anonymous>
g1585:{Window}:"customElements"
c1585:?:{Window}
c1609:%Apply:{Window}:%toLowerCase:"ExtensionView":{Arguments}:1:1
!14
c985:%Apply:{Window}:%apply:%define:{Arguments}:1:3
c985:%define:{CustomElementRegistry}:"extensionview":DeniedElement
!13
c1660:%Apply:{Window}:%defineProperty:%Object:{Arguments}:0:3
c2239:%Apply:{Window}:%hasOwnProperty:{Window}:{Arguments}:1:2
c1277:%AllowGuestViewElementDefinition:{Object}:<anonymous>
g1585:{Window}:"customElements"
c1585:?:{Window}
c1609:%Apply:{Window}:%toLowerCase:"WebView":{Arguments}:1:1
!14
c985:%Apply:{Window}:%apply:%define:{Arguments}:1:3
c985:%define:{CustomElementRegistry}:"webview":DeniedElement
!13
c1660:%Apply:{Window}:%defineProperty:%Object:{Arguments}:0:3
g2369:{Event}:"type"
c2369:?:{Event}
!14
c985:%Apply:{Window}:%apply:%removeEventListener:{Arguments}:1:3
c985:%removeEventListener:{Window}:"readystatechange":listener:#T
